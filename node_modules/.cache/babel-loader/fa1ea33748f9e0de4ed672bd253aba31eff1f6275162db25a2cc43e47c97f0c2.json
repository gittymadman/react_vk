{"ast":null,"code":"var _jsxFileName = \"D:\\\\langchain\\\\my-app\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { formatLines, parseDiff, diffLines } from 'unidiff';\nimport { Diff, Hunk, getChangeKey } from 'react-diff-view';\nimport { mapValues } from 'lodash';\nimport 'react-diff-view/style/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EMPTY_HUNKS = [];\nfunction App() {\n  _s();\n  const [hunks, setHunks] = useState(EMPTY_HUNKS);\n  useEffect(() => {\n    const fetchCodeFromAPI = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/api/codes');\n        if (!response.ok) {\n          console.log('Failed to fetch code from API');\n          throw new Error('Failed to fetch code from API');\n        }\n        const {\n          oldCode,\n          newCode\n        } = await response.json();\n        const diffText = formatLines(diffLines(oldCode, newCode), {\n          context: 3\n        });\n        const [diff] = parseDiff(diffText, {\n          nearbySequences: 'zip'\n        });\n        setHunks(diff.hunks || EMPTY_HUNKS);\n      } catch (error) {\n        console.error('Error fetching code:', error);\n      }\n    };\n    fetchCodeFromAPI();\n  }, []);\n  const [conversations, {\n    initConversation,\n    addComment\n  }] = useState({});\n  const codeEvents = {\n    onDoubleClick({\n      change\n    }) {\n      const key = getChangeKey(change);\n      if (!conversations[key]) {\n        initConversation(key);\n      }\n    }\n  };\n  const widgets = mapValues(conversations, ({\n    comments\n  }, changeKey) => /*#__PURE__*/_jsxDEV(\"div\", {}, changeKey, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"diff-view\",\n      children: /*#__PURE__*/_jsxDEV(Diff, {\n        viewType: \"split\",\n        diffType: \"chars\",\n        hunks: hunks,\n        children: hunks => hunks.map(hunk => /*#__PURE__*/_jsxDEV(Hunk, {\n          hunk: hunk,\n          codeEvents: codeEvents,\n          widgets: widgets\n        }, hunk.content, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"tXOtEoriwO8uS2KSQNnEV+V4XVM=\");\n_c = App;\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 74,\n  columnNumber: 17\n}, this), rootElement);\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","formatLines","parseDiff","diffLines","Diff","Hunk","getChangeKey","mapValues","jsxDEV","_jsxDEV","EMPTY_HUNKS","App","_s","hunks","setHunks","fetchCodeFromAPI","response","fetch","ok","console","log","Error","oldCode","newCode","json","diffText","context","diff","nearbySequences","error","conversations","initConversation","addComment","codeEvents","onDoubleClick","change","key","widgets","comments","changeKey","fileName","_jsxFileName","lineNumber","columnNumber","children","className","id","viewType","diffType","map","hunk","content","_c","rootElement","document","getElementById","render","$RefreshReg$"],"sources":["D:/langchain/my-app/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { formatLines, parseDiff, diffLines } from 'unidiff';\nimport { Diff, Hunk, getChangeKey } from 'react-diff-view';\nimport { mapValues } from 'lodash';\n\nimport 'react-diff-view/style/index.css';\n\nconst EMPTY_HUNKS = [];\n\nfunction App() {\n    const [hunks, setHunks] = useState(EMPTY_HUNKS);\n\n    useEffect(() => {\n        const fetchCodeFromAPI = async () => {\n            try {\n                const response = await fetch('http://localhost:3001/api/codes');\n\n                if (!response.ok) {\n                    console.log('Failed to fetch code from API');\n                    throw new Error('Failed to fetch code from API');\n                }\n\n                const { oldCode, newCode } = await response.json();\n\n                const diffText = formatLines(diffLines(oldCode, newCode), { context: 3 });\n                const [diff] = parseDiff(diffText, { nearbySequences: 'zip' });\n\n                setHunks(diff.hunks || EMPTY_HUNKS);\n            } catch (error) {\n                console.error('Error fetching code:', error);\n            }\n        };\n\n        fetchCodeFromAPI();\n    }, []);\n\n    const [conversations, { initConversation, addComment }] = useState({});\n\n    const codeEvents = {\n        onDoubleClick({ change }) {\n            const key = getChangeKey(change);\n            if (!conversations[key]) {\n                initConversation(key);\n            }\n        },\n    };\n\n    const widgets = mapValues(conversations, ({ comments }, changeKey) => (\n        <div key={changeKey}>\n            {/* Render your conversation components here */}\n        </div>\n    ));\n\n    return (\n        <div>\n            <header className=\"header\">\n                \n            </header>\n            <main id=\"diff-view\">\n                <Diff viewType=\"split\" diffType=\"chars\" hunks={hunks}>\n                    {hunks =>\n                        hunks.map(hunk => (\n                            <Hunk key={hunk.content} hunk={hunk} codeEvents={codeEvents} widgets={widgets} />\n                        ))\n                    }\n                </Diff>\n            </main>\n        </div>\n    );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}