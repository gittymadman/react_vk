{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krv11\\\\OneDrive\\\\Desktop\\\\langchain\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Diff, Hunk, Decoration, withSourceExpansion } from 'react-diff-view';\nimport 'react-diff-view/style/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiffWithSourceExpansion = withSourceExpansion(Diff);\n_c = DiffWithSourceExpansion;\nconst OldCode = `\n// This is the old code\nfunction add(a, b) {\n  return a + b;\n}\n`;\nconst NewCode = `\n// This is the new code\nfunction add(a, b) {\n  return a + b + 1; // Added 1 to the result\n}\n`;\nconst CodeDiff = () => /*#__PURE__*/_jsxDEV(DiffWithSourceExpansion, {\n  viewType: \"split\",\n  oldSource: OldCode,\n  newSource: NewCode,\n  compareMethod: (lineFromFile1, lineFromFile2) => lineFromFile1 === lineFromFile2,\n  renderHunk: (hunk, index) => /*#__PURE__*/_jsxDEV(Hunk, {\n    hunk: hunk,\n    children: ({\n      lines,\n      type\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: lines.map((line, i) => {\n        const {\n          newLineNumber,\n          oldLineNumber,\n          type,\n          content\n        } = line;\n        return /*#__PURE__*/_jsxDEV(Decoration, {\n          type: type,\n          children: content\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 3\n}, this);\n_c2 = CodeDiff;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Code Diff Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CodeDiff, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bye\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DiffWithSourceExpansion\");\n$RefreshReg$(_c2, \"CodeDiff\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","Diff","Hunk","Decoration","withSourceExpansion","jsxDEV","_jsxDEV","DiffWithSourceExpansion","_c","OldCode","NewCode","CodeDiff","viewType","oldSource","newSource","compareMethod","lineFromFile1","lineFromFile2","renderHunk","hunk","index","children","lines","type","map","line","i","newLineNumber","oldLineNumber","content","fileName","_jsxFileName","lineNumber","columnNumber","_c2","App","className","_c3","$RefreshReg$"],"sources":["C:/Users/krv11/OneDrive/Desktop/langchain/my-app/src/App.js"],"sourcesContent":["import React from 'react';\nimport { Diff, Hunk, Decoration, withSourceExpansion } from 'react-diff-view';\nimport 'react-diff-view/style/index.css';\n\nconst DiffWithSourceExpansion = withSourceExpansion(Diff);\n\nconst OldCode = `\n// This is the old code\nfunction add(a, b) {\n  return a + b;\n}\n`;\n\nconst NewCode = `\n// This is the new code\nfunction add(a, b) {\n  return a + b + 1; // Added 1 to the result\n}\n`;\n\nconst CodeDiff = () => (\n    \n  <DiffWithSourceExpansion\n            \n    viewType=\"split\"\n    oldSource={OldCode}\n    newSource={NewCode}\n    compareMethod={(lineFromFile1, lineFromFile2) => lineFromFile1 === lineFromFile2}\n    renderHunk={(hunk, index) => (\n      <Hunk key={index} hunk={hunk}>\n        {({ lines, type }) => (\n          <div>\n            \n            {lines.map((line, i) => {\n              const { newLineNumber, oldLineNumber, type, content } = line;\n              return (\n                <Decoration key={i} type={type}>\n                  \n                  {content}\n                </Decoration>\n              );\n            })}\n          </div>\n        )}\n      </Hunk>\n    )}\n  />\n);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Code Diff Example</h1>\n      <CodeDiff />\n      <h2>Bye</h2>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,IAAI,EAAEC,UAAU,EAAEC,mBAAmB,QAAQ,iBAAiB;AAC7E,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,uBAAuB,GAAGH,mBAAmB,CAACH,IAAI,CAAC;AAACO,EAAA,GAApDD,uBAAuB;AAE7B,MAAME,OAAO,GAAG;AAChB;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,OAAO,GAAG;AAChB;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,QAAQ,GAAGA,CAAA,kBAEfL,OAAA,CAACC,uBAAuB;EAEtBK,QAAQ,EAAC,OAAO;EAChBC,SAAS,EAAEJ,OAAQ;EACnBK,SAAS,EAAEJ,OAAQ;EACnBK,aAAa,EAAEA,CAACC,aAAa,EAAEC,aAAa,KAAKD,aAAa,KAAKC,aAAc;EACjFC,UAAU,EAAEA,CAACC,IAAI,EAAEC,KAAK,kBACtBd,OAAA,CAACJ,IAAI;IAAaiB,IAAI,EAAEA,IAAK;IAAAE,QAAA,EAC1BA,CAAC;MAAEC,KAAK;MAAEC;IAAK,CAAC,kBACfjB,OAAA;MAAAe,QAAA,EAEGC,KAAK,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;QACtB,MAAM;UAAEC,aAAa;UAAEC,aAAa;UAAEL,IAAI;UAAEM;QAAQ,CAAC,GAAGJ,IAAI;QAC5D,oBACEnB,OAAA,CAACH,UAAU;UAASoB,IAAI,EAAEA,IAAK;UAAAF,QAAA,EAE5BQ;QAAO,GAFOH,CAAC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGN,CAAC;MAEjB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACN,GAdQb,KAAK;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAeV;AACN;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CACF;AAACC,GAAA,GA3BIvB,QAAQ;AA6Bd,SAASwB,GAAGA,CAAA,EAAG;EACb,oBACE7B,OAAA;IAAK8B,SAAS,EAAC,KAAK;IAAAf,QAAA,gBAClBf,OAAA;MAAAe,QAAA,EAAI;IAAiB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B3B,OAAA,CAACK,QAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZ3B,OAAA;MAAAe,QAAA,EAAI;IAAG;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAACI,GAAA,GARQF,GAAG;AAUZ,eAAeA,GAAG;AAAC,IAAA3B,EAAA,EAAA0B,GAAA,EAAAG,GAAA;AAAAC,YAAA,CAAA9B,EAAA;AAAA8B,YAAA,CAAAJ,GAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}