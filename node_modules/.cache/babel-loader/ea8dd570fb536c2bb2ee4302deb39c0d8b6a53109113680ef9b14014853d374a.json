{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krv11\\\\OneDrive\\\\Desktop\\\\langchain\\\\my-app\\\\src\\\\codeiff.js\";\nimport React from 'react';\nimport { Diff, Hunk, parseDiff } from 'react-diff-view';\nimport 'react-diff-view/style/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst diffText = `\n--- oldCode\n+++ newCode\n@@ -1,5 +1,5 @@\nfunction MyComponent() {\n\nreturn <div>Hello, old world!</div>;\nreturn <div>Hello, new world!</div>;\n}\n`;\nconst DiffViewer = () => {\n  const [diff] = parseDiff(diffText);\n  if (!diff || !diff.hunks) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Failed to parse diff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 8\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Diff, {\n    viewType: \"split\",\n    diff: diff,\n    children: diff.hunks = (diff.hunks || []).map(hunk => /*#__PURE__*/_jsxDEV(Hunk, {\n      hunk: hunk\n    }, hunk.content, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 1\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 1\n  }, this);\n};\n_c = DiffViewer;\nexport default DiffViewer;\nvar _c;\n$RefreshReg$(_c, \"DiffViewer\");","map":{"version":3,"names":["React","Diff","Hunk","parseDiff","jsxDEV","_jsxDEV","diffText","DiffViewer","diff","hunks","children","fileName","_jsxFileName","lineNumber","columnNumber","viewType","map","hunk","content","_c","$RefreshReg$"],"sources":["C:/Users/krv11/OneDrive/Desktop/langchain/my-app/src/codeiff.js"],"sourcesContent":["import React from 'react';\r\nimport { Diff, Hunk, parseDiff } from 'react-diff-view';\r\nimport 'react-diff-view/style/index.css';\r\n\r\nconst diffText = `\r\n--- oldCode\r\n+++ newCode\r\n@@ -1,5 +1,5 @@\r\nfunction MyComponent() {\r\n\r\nreturn <div>Hello, old world!</div>;\r\nreturn <div>Hello, new world!</div>;\r\n}\r\n`;\r\nconst DiffViewer = () => {\r\nconst [diff] = parseDiff(diffText);\r\n\r\nif (!diff || !diff.hunks) {\r\nreturn <div>Failed to parse diff</div>;\r\n}\r\n\r\nreturn (\r\n<Diff viewType=\"split\" diff={diff}>\r\n{diff.hunks= (diff.hunks || []).map(hunk => (\r\n<Hunk key={hunk.content} hunk={hunk} />\r\n\r\n))}\r\n</Diff>\r\n\r\n);\r\n};\r\n\r\nexport default DiffViewer;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,IAAI,EAAEC,SAAS,QAAQ,iBAAiB;AACvD,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,QAAQ,GAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACzB,MAAM,CAACC,IAAI,CAAC,GAAGL,SAAS,CAACG,QAAQ,CAAC;EAElC,IAAI,CAACE,IAAI,IAAI,CAACA,IAAI,CAACC,KAAK,EAAE;IAC1B,oBAAOJ,OAAA;MAAAK,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtC;EAEA,oBACAT,OAAA,CAACJ,IAAI;IAACc,QAAQ,EAAC,OAAO;IAACP,IAAI,EAAEA,IAAK;IAAAE,QAAA,EACjCF,IAAI,CAACC,KAAK,GAAE,CAACD,IAAI,CAACC,KAAK,IAAI,EAAE,EAAEO,GAAG,CAACC,IAAI,iBACxCZ,OAAA,CAACH,IAAI;MAAoBe,IAAI,EAAEA;IAAK,GAAzBA,IAAI,CAACC,OAAO;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAErC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAGP,CAAC;AAACK,EAAA,GAhBIZ,UAAU;AAkBhB,eAAeA,UAAU;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}