{"ast":null,"code":"var _jsxFileName = \"D:\\\\langchain\\\\my-app\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport { mapValues } from 'lodash';\nimport { Input } from 'antd';\nimport { diffLines, formatLines } from 'unidiff';\nimport { parseDiff, Diff, Hunk, getChangeKey } from 'react-diff-view';\nimport { useInput } from './hooks';\nimport { useConversations, Conversation } from './comments';\nimport 'antd/dist/reset.css';\nimport 'react-diff-view/style/index.css';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EMPTY_HUNKS = [];\nfunction App() {\n  _s();\n  const [oldCode, setOldCode] = useState('');\n  const [newCode, setNewCode] = useState('');\n  const [{\n    type,\n    hunks\n  }, setDiff] = useState({\n    type: '',\n    hunks: EMPTY_HUNKS\n  });\n  const fetchCodeFromAPI = useCallback(async () => {\n    try {\n      const oldResponse = await fetch('http://localhost:3001/api/old-code');\n      const newResponse = await fetch('http://localhost:3001/api/new-code');\n      if (!oldResponse.ok || !newResponse.ok) {\n        console.log('Failed to fetch code from api');\n        throw new Error('Failed to fetch code from API');\n      }\n      const fetchedOldCode = await oldResponse.text();\n      const fetchedNewCode = await newResponse.text();\n      setOldCode(fetchedOldCode);\n      setNewCode(fetchedNewCode);\n    } catch (error) {\n      console.error('Error fetching code:', error);\n    }\n  }, []);\n  useEffect(() => {\n    fetchCodeFromAPI();\n  }, [fetchCodeFromAPI]);\n  const generateDiff = useCallback(() => {\n    if (oldCode && newCode) {\n      const diffText = formatLines(diffLines(oldCode, newCode), {\n        context: 3\n      });\n      const [diff] = parseDiff(diffText, {\n        nearbySequences: 'zip'\n      });\n      setDiff({\n        type: 'split',\n        hunks: diff.hunks || EMPTY_HUNKS\n      });\n    }\n  }, [oldCode, newCode]);\n  useEffect(() => {\n    generateDiff();\n  }, [oldCode, newCode, generateDiff]);\n\n  // Remaining code as before...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n          className: \"text\",\n          rows: 5,\n          placeholder: \"OLD CODE...\",\n          value: oldCode,\n          onChange: e => setOldCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input.TextArea, {\n          className: \"text\",\n          rows: 5,\n          placeholder: \"NEW CODE...\",\n          value: newCode,\n          onChange: e => setNewCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"diff-view\",\n      children: /*#__PURE__*/_jsxDEV(Diff, {\n        viewType: \"split\",\n        diffType: type,\n        hunks: hunks || EMPTY_HUNKS,\n        children: hunks => hunks.map(hunk => /*#__PURE__*/_jsxDEV(Hunk, {\n          hunk: hunk,\n          codeEvents: codeEvents,\n          widgets: widgets\n        }, hunk.content, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"nZwd6F3+j8WMcOegGhcC5edYJYw=\");\n_c = App;\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 81,\n  columnNumber: 17\n}, this), rootElement);\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ReactDOM","mapValues","Input","diffLines","formatLines","parseDiff","Diff","Hunk","getChangeKey","useInput","useConversations","Conversation","jsxDEV","_jsxDEV","EMPTY_HUNKS","App","_s","oldCode","setOldCode","newCode","setNewCode","type","hunks","setDiff","fetchCodeFromAPI","oldResponse","fetch","newResponse","ok","console","log","Error","fetchedOldCode","text","fetchedNewCode","error","generateDiff","diffText","context","diff","nearbySequences","children","className","TextArea","rows","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","id","viewType","diffType","map","hunk","codeEvents","widgets","content","_c","rootElement","document","getElementById","render","$RefreshReg$"],"sources":["D:/langchain/my-app/src/index.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport { mapValues } from 'lodash';\nimport { Input } from 'antd';\nimport { diffLines, formatLines } from 'unidiff';\nimport { parseDiff, Diff, Hunk, getChangeKey } from 'react-diff-view';\nimport { useInput } from './hooks';\nimport { useConversations, Conversation } from './comments';\n\nimport 'antd/dist/reset.css';\nimport 'react-diff-view/style/index.css';\nimport './style.css';\n\nconst EMPTY_HUNKS = [];\n\nfunction App() {\n    const [oldCode, setOldCode] = useState('');\n    const [newCode, setNewCode] = useState('');\n    const [{ type, hunks }, setDiff] = useState({ type: '', hunks: EMPTY_HUNKS });\n\n    const fetchCodeFromAPI = useCallback(async () => {\n        try {\n            const oldResponse = await fetch('http://localhost:3001/api/old-code');\n            const newResponse = await fetch('http://localhost:3001/api/new-code');\n\n            if (!oldResponse.ok || !newResponse.ok) {\n                console.log('Failed to fetch code from api')\n                throw new Error('Failed to fetch code from API');\n            }\n\n            const fetchedOldCode = await oldResponse.text();\n            const fetchedNewCode = await newResponse.text();\n\n            setOldCode(fetchedOldCode);\n            setNewCode(fetchedNewCode);\n        } catch (error) {\n            console.error('Error fetching code:', error);\n        }\n    }, []);\n\n    useEffect(() => {\n        fetchCodeFromAPI();\n    }, [fetchCodeFromAPI]);\n\n    const generateDiff = useCallback(() => {\n        if (oldCode && newCode) {\n            const diffText = formatLines(diffLines(oldCode, newCode), { context: 3 });\n            const [diff] = parseDiff(diffText, { nearbySequences: 'zip' });\n            setDiff({ type: 'split', hunks: diff.hunks || EMPTY_HUNKS });\n        }\n    }, [oldCode, newCode]);\n\n    useEffect(() => {\n        generateDiff();\n    }, [oldCode, newCode, generateDiff]);\n\n    // Remaining code as before...\n\n    return (\n        <div>\n            <header className=\"header\">\n                <div className=\"input\">\n                    <Input.TextArea className=\"text\" rows={5} placeholder=\"OLD CODE...\" value={oldCode} onChange={e => setOldCode(e.target.value)} />\n                    <Input.TextArea className=\"text\" rows={5} placeholder=\"NEW CODE...\" value={newCode} onChange={e => setNewCode(e.target.value)} />\n                </div>\n            </header>\n            <main id=\"diff-view\">\n                <Diff viewType=\"split\" diffType={type} hunks={hunks || EMPTY_HUNKS}>\n                    {hunks =>\n                        hunks.map(hunk => (\n                            <Hunk key={hunk.content} hunk={hunk} codeEvents={codeEvents} widgets={widgets} />\n                        ))\n                    }\n                </Diff>\n            </main>\n        </div>\n    );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}