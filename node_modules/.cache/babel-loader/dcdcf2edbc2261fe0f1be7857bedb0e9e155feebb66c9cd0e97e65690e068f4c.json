{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krv11\\\\OneDrive\\\\Desktop\\\\langchain\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Diff, parseDiff } from 'react-diff-view';\nimport 'react-diff-view/style/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DiffView({\n  codeA,\n  codeB\n}) {\n  const linesA = codeA.split(\"\\n\");\n  const linesB = codeB.split(\"\\n\");\n  const maxLines = Math.max(linesA.length, linesB.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diff-view\",\n    children: Array.from({\n      length: maxLines\n    }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: linesA[index] === linesB[index] ? \"\" : \"removed\",\n        children: linesA[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: linesA[index] === linesB[index] ? \"added\" : \"\",\n        children: linesB[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = DiffView;\nconst App = () => {\n  const oldcode = `\n    function MyComponent() {\n      return <div>Hello, new world!</div>;\n    }\n  `;\n  const newcode = `\n    function MyComponent() {\n      return <div>Hello, old world!</div>;\n    }\n  `;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Code Difference Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiffView, {\n      codeA: oldcode,\n      codeB: newcode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"DiffView\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","Diff","parseDiff","jsxDEV","_jsxDEV","DiffView","codeA","codeB","linesA","split","linesB","maxLines","Math","max","length","className","children","Array","from","map","_","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","oldcode","newcode","_c2","$RefreshReg$"],"sources":["C:/Users/krv11/OneDrive/Desktop/langchain/my-app/src/App.js"],"sourcesContent":["import React from 'react';\nimport { Diff, parseDiff } from 'react-diff-view';\nimport 'react-diff-view/style/index.css';\n\nfunction DiffView({ codeA, codeB }) {\n  const linesA = codeA.split(\"\\n\");\n  const linesB = codeB.split(\"\\n\");\n\n  const maxLines = Math.max(linesA.length, linesB.length);\n\n  return (\n    <div className=\"diff-view\">\n      {Array.from({ length: maxLines }).map((_, index) => (\n        <div key={index} className=\"line\">\n          <span className={linesA[index] === linesB[index] ? \"\" : \"removed\"}>\n            {linesA[index]}\n          </span>\n          <span className={linesA[index] === linesB[index] ? \"added\" : \"\"}>\n            {linesB[index]}\n          </span>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nconst App = () => {\n  const oldcode = `\n    function MyComponent() {\n      return <div>Hello, new world!</div>;\n    }\n  `;\n\n  const newcode = `\n    function MyComponent() {\n      return <div>Hello, old world!</div>;\n    }\n  `;\n  \n  return (\n    <div>\n      <h1>Code Difference Viewer</h1>\n      <DiffView codeA={oldcode} codeB={newcode} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,SAAS,QAAQ,iBAAiB;AACjD,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,EAAE;EAClC,MAAMC,MAAM,GAAGF,KAAK,CAACG,KAAK,CAAC,IAAI,CAAC;EAChC,MAAMC,MAAM,GAAGH,KAAK,CAACE,KAAK,CAAC,IAAI,CAAC;EAEhC,MAAME,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACL,MAAM,CAACM,MAAM,EAAEJ,MAAM,CAACI,MAAM,CAAC;EAEvD,oBACEV,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBC,KAAK,CAACC,IAAI,CAAC;MAAEJ,MAAM,EAAEH;IAAS,CAAC,CAAC,CAACQ,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAC7CjB,OAAA;MAAiBW,SAAS,EAAC,MAAM;MAAAC,QAAA,gBAC/BZ,OAAA;QAAMW,SAAS,EAAEP,MAAM,CAACa,KAAK,CAAC,KAAKX,MAAM,CAACW,KAAK,CAAC,GAAG,EAAE,GAAG,SAAU;QAAAL,QAAA,EAC/DR,MAAM,CAACa,KAAK;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACPrB,OAAA;QAAMW,SAAS,EAAEP,MAAM,CAACa,KAAK,CAAC,KAAKX,MAAM,CAACW,KAAK,CAAC,GAAG,OAAO,GAAG,EAAG;QAAAL,QAAA,EAC7DN,MAAM,CAACW,KAAK;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA,GANCJ,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GApBQrB,QAAQ;AAsBjB,MAAMsB,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAMC,OAAO,GAAG;AAClB;AACA;AACA;AACA,GAAG;EAED,MAAMC,OAAO,GAAG;AAClB;AACA;AACA;AACA,GAAG;EAED,oBACEzB,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAsB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BrB,OAAA,CAACC,QAAQ;MAACC,KAAK,EAAEsB,OAAQ;MAACrB,KAAK,EAAEsB;IAAQ;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAACK,GAAA,GAnBIH,GAAG;AAqBT,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}