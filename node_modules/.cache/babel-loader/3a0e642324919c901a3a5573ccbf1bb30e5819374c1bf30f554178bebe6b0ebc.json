{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krv11\\\\OneDrive\\\\Desktop\\\\langchain\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Diff, Hunk, parseDiff } from 'react-diff-view';\nimport 'react-diff-view/style/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst diffText = `\n--- oldCode\n+++ newCode\n@@ -1,5 +1,5 @@\n function MyComponent() {\n-  return <div>Hello, old world!</div>;\n+  return <div>Hello, new world!</div>;\n }\n`;\nconst DiffViewer = () => {\n  // Parsing the diff text into a structured diff object\n  const [diff] = parseDiff(diffText);\n\n  // If parsing fails or if there are no hunks, render a failure message\n  if (!diff || !diff.hunks) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Failed to parse diff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If parsing is successful, render the Diff component\n  return /*#__PURE__*/_jsxDEV(Diff, {\n    viewType: \"split\",\n    diff: diff,\n    children: ({\n      hunks\n    }) => (hunks || []).map(hunk => /*#__PURE__*/_jsxDEV(Hunk, {\n      hunk: hunk\n    }, hunk.content, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = DiffViewer;\nexport default DiffViewer;\nvar _c;\n$RefreshReg$(_c, \"DiffViewer\");","map":{"version":3,"names":["React","Diff","Hunk","parseDiff","jsxDEV","_jsxDEV","diffText","DiffViewer","diff","hunks","children","fileName","_jsxFileName","lineNumber","columnNumber","viewType","map","hunk","content","_c","$RefreshReg$"],"sources":["C:/Users/krv11/OneDrive/Desktop/langchain/my-app/src/App.js"],"sourcesContent":["import React from 'react';\nimport { Diff, Hunk, parseDiff } from 'react-diff-view';\nimport 'react-diff-view/style/index.css';\n\nconst diffText = `\n--- oldCode\n+++ newCode\n@@ -1,5 +1,5 @@\n function MyComponent() {\n-  return <div>Hello, old world!</div>;\n+  return <div>Hello, new world!</div>;\n }\n`;\n\nconst DiffViewer = () => {\n  // Parsing the diff text into a structured diff object\n  const [diff] = parseDiff(diffText);\n\n  // If parsing fails or if there are no hunks, render a failure message\n  if (!diff || !diff.hunks) {\n    return <div>Failed to parse diff</div>;\n  }\n\n  // If parsing is successful, render the Diff component\n  return (\n    <Diff viewType=\"split\" diff={diff}>\n      {/* Rendering each hunk within the Diff component */}\n      {({ hunks }) => (hunks || []).map(hunk => (\n        <Hunk key={hunk.content} hunk={hunk} />\n      ))}\n    </Diff>\n  );\n};\n\nexport default DiffViewer;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,IAAI,EAAEC,SAAS,QAAQ,iBAAiB;AACvD,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,QAAQ,GAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB;EACA,MAAM,CAACC,IAAI,CAAC,GAAGL,SAAS,CAACG,QAAQ,CAAC;;EAElC;EACA,IAAI,CAACE,IAAI,IAAI,CAACA,IAAI,CAACC,KAAK,EAAE;IACxB,oBAAOJ,OAAA;MAAAK,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACxC;;EAEA;EACA,oBACET,OAAA,CAACJ,IAAI;IAACc,QAAQ,EAAC,OAAO;IAACP,IAAI,EAAEA,IAAK;IAAAE,QAAA,EAE/BA,CAAC;MAAED;IAAM,CAAC,KAAK,CAACA,KAAK,IAAI,EAAE,EAAEO,GAAG,CAACC,IAAI,iBACpCZ,OAAA,CAACH,IAAI;MAAoBe,IAAI,EAAEA;IAAK,GAAzBA,IAAI,CAACC,OAAO;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACK,EAAA,GAlBIZ,UAAU;AAoBhB,eAAeA,UAAU;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}