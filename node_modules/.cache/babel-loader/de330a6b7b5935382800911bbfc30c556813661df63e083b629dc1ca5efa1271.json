{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krv11\\\\OneDrive\\\\Desktop\\\\langchain\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport { parseDiff, Diff, Hunk } from 'react-diff-view';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst oldRevision = `\nfunction MyComponent() {\n  return <div>Hello, new world!</div>;\n}`;\nconst newRevision = `\nfunction MyComponent() {\n  return <div>Hello, old world!</div>;\n}`;\nfunction renderFile({\n  oldRevision,\n  newRevision,\n  type,\n  hunks\n}) {\n  return /*#__PURE__*/_jsxDEV(Diff, {\n    viewType: \"split\",\n    diffType: type,\n    hunks: hunks,\n    children: hunks => hunks.map(hunk => /*#__PURE__*/_jsxDEV(Hunk, {\n      hunk: hunk\n    }, hunk.content, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 41\n    }, this))\n  }, oldRevision + '-' + newRevision, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\nfunction App({\n  diffText\n}) {\n  const files = parseDiff(diffText);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: files.map(renderFile)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","parseDiff","Diff","Hunk","jsxDEV","_jsxDEV","oldRevision","newRevision","renderFile","type","hunks","viewType","diffType","children","map","hunk","content","fileName","_jsxFileName","lineNumber","columnNumber","App","diffText","files","_c","$RefreshReg$"],"sources":["C:/Users/krv11/OneDrive/Desktop/langchain/my-app/src/App.js"],"sourcesContent":["import React from 'react';\nimport {parseDiff, Diff, Hunk} from 'react-diff-view';\n\nconst oldRevision = `\nfunction MyComponent() {\n  return <div>Hello, new world!</div>;\n}`;\n\n\n\nconst newRevision = `\nfunction MyComponent() {\n  return <div>Hello, old world!</div>;\n}`;\nfunction renderFile({oldRevision, newRevision, type, hunks}) {\n    return (\n        <Diff key={oldRevision + '-' + newRevision} viewType=\"split\" diffType={type} hunks={hunks}>\n            {hunks => hunks.map(hunk => <Hunk key={hunk.content} hunk={hunk} />)}\n        </Diff>\n    );\n}\n\nfunction App({diffText}) {\n    const files = parseDiff(diffText);\n\n    return (\n        <div>\n            {files.map(renderFile)}\n        </div>\n    );\n}\n\nexport default App"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,EAAEC,IAAI,EAAEC,IAAI,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,WAAW,GAAG;AACpB;AACA;AACA,EAAE;AAIF,MAAMC,WAAW,GAAG;AACpB;AACA;AACA,EAAE;AACF,SAASC,UAAUA,CAAC;EAACF,WAAW;EAAEC,WAAW;EAAEE,IAAI;EAAEC;AAAK,CAAC,EAAE;EACzD,oBACIL,OAAA,CAACH,IAAI;IAAuCS,QAAQ,EAAC,OAAO;IAACC,QAAQ,EAAEH,IAAK;IAACC,KAAK,EAAEA,KAAM;IAAAG,QAAA,EACrFH,KAAK,IAAIA,KAAK,CAACI,GAAG,CAACC,IAAI,iBAAIV,OAAA,CAACF,IAAI;MAAoBY,IAAI,EAAEA;IAAK,GAAzBA,IAAI,CAACC,OAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC;EAAC,GAD7Dd,WAAW,GAAG,GAAG,GAAGC,WAAW;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpC,CAAC;AAEf;AAEA,SAASC,GAAGA,CAAC;EAACC;AAAQ,CAAC,EAAE;EACrB,MAAMC,KAAK,GAAGtB,SAAS,CAACqB,QAAQ,CAAC;EAEjC,oBACIjB,OAAA;IAAAQ,QAAA,EACKU,KAAK,CAACT,GAAG,CAACN,UAAU;EAAC;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEd;AAACI,EAAA,GARQH,GAAG;AAUZ,eAAeA,GAAG;AAAA,IAAAG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}