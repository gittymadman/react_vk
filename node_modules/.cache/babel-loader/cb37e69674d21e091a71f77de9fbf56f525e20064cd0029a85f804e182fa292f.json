{"ast":null,"code":"var _jsxFileName = \"D:\\\\langchain\\\\my-app\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport { diffLines, formatLines } from 'unidiff';\nimport { parseDiff, Diff, Hunk, getChangeKey } from 'react-diff-view';\nimport { useConversations, Conversation } from './comments';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EMPTY_HUNKS = [];\nfunction App() {\n  _s();\n  const [oldCode, setOldCode] = useState('');\n  const [newCode, setNewCode] = useState('');\n  const [{\n    type,\n    hunks\n  }, setDiff] = useState({\n    type: '',\n    hunks: EMPTY_HUNKS\n  });\n  const fetchCodeFromAPI = useCallback(async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/api/codes\");\n      if (!response.ok) {\n        console.log('Failed to fetch code from API');\n        throw new Error('Failed to fetch code from API');\n      }\n      const {\n        oldCode,\n        newCode\n      } = await response.json();\n      setOldCode(oldCode);\n      setNewCode(newCode);\n    } catch (error) {\n      console.error('Error fetching code:', error);\n    }\n  }, []);\n  useEffect(() => {\n    fetchCodeFromAPI();\n  }, [fetchCodeFromAPI]);\n  const generateDiff = useCallback(() => {\n    if (oldCode && newCode) {\n      const diffText = formatLines(diffLines(oldCode, newCode), {\n        context: 3\n      });\n      const [diff] = parseDiff(diffText, {\n        nearbySequences: 'zip'\n      });\n      setDiff({\n        type: 'split',\n        hunks: diff.hunks || EMPTY_HUNKS\n      });\n    }\n  }, [oldCode, newCode]);\n  useEffect(() => {\n    generateDiff();\n  }, [oldCode, newCode, generateDiff]);\n  const [conversations, {\n    initConversation,\n    addComment\n  }] = useConversations();\n  const codeEvents = {\n    onDoubleClick({\n      change\n    }) {\n      const key = getChangeKey(change);\n      if (!conversations[key]) {\n        initConversation(key);\n      }\n    }\n  };\n  const widgets = Object.keys(conversations).map(changeKey => /*#__PURE__*/_jsxDEV(Conversation, {\n    changeKey: changeKey,\n    comments: conversations[changeKey].comments,\n    onSubmitComment: addComment\n  }, changeKey, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this));\n  const serializeContentToHTML = useCallback(() => {\n    fetch('http://localhost:3001/generate-html', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        oldCode,\n        newCode,\n        hunks\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to save HTML content');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('HTML content saved successfully:', data.filePath);\n    }).catch(error => {\n      console.error('Error saving HTML:', error);\n    });\n  }, [oldCode, newCode, hunks]);\n  useEffect(() => {\n    if (oldCode && newCode && hunks.length > 0) {\n      serializeContentToHTML();\n    }\n  }, [oldCode, newCode, hunks, serializeContentToHTML]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Diff, {\n        viewType: \"split\",\n        diffType: type,\n        hunks: hunks || EMPTY_HUNKS,\n        children: hunks => hunks.map(hunk => /*#__PURE__*/_jsxDEV(Hunk, {\n          hunk: hunk,\n          codeEvents: codeEvents,\n          widgets: widgets\n        }, hunk.content, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ZcaQskQxybk4jetF520aGa5kkM8=\", false, function () {\n  return [useConversations];\n});\n_c = App;\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 107,\n  columnNumber: 17\n}, this), rootElement);\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ReactDOM","diffLines","formatLines","parseDiff","Diff","Hunk","getChangeKey","useConversations","Conversation","jsxDEV","_jsxDEV","EMPTY_HUNKS","App","_s","oldCode","setOldCode","newCode","setNewCode","type","hunks","setDiff","fetchCodeFromAPI","response","fetch","ok","console","log","Error","json","error","generateDiff","diffText","context","diff","nearbySequences","conversations","initConversation","addComment","codeEvents","onDoubleClick","change","key","widgets","Object","keys","map","changeKey","comments","onSubmitComment","fileName","_jsxFileName","lineNumber","columnNumber","serializeContentToHTML","method","headers","body","JSON","stringify","then","data","filePath","catch","length","children","viewType","diffType","hunk","content","_c","rootElement","document","getElementById","render","$RefreshReg$"],"sources":["D:/langchain/my-app/src/index.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport { diffLines, formatLines } from 'unidiff';\nimport { parseDiff, Diff, Hunk, getChangeKey } from 'react-diff-view';\nimport { useConversations, Conversation } from './comments';\n\nimport './style.css';\n\nconst EMPTY_HUNKS = [];\n\nfunction App() {\n    const [oldCode, setOldCode] = useState('');\n    const [newCode, setNewCode] = useState('');\n    const [{ type, hunks }, setDiff] = useState({ type: '', hunks: EMPTY_HUNKS });\n\n    const fetchCodeFromAPI = useCallback(async () => {\n        try {\n            const response = await fetch(\"http://localhost:3001/api/codes\");\n\n            if (!response.ok) {\n                console.log('Failed to fetch code from API');\n                throw new Error('Failed to fetch code from API');\n            }\n\n            const { oldCode, newCode } = await response.json();\n            setOldCode(oldCode);\n            setNewCode(newCode);\n        } catch (error) {\n            console.error('Error fetching code:', error);\n        }\n    }, []);\n\n    useEffect(() => {\n        fetchCodeFromAPI();\n    }, [fetchCodeFromAPI]);\n\n    const generateDiff = useCallback(() => {\n        if (oldCode && newCode) {\n            const diffText = formatLines(diffLines(oldCode, newCode), { context: 3 });\n            const [diff] = parseDiff(diffText, { nearbySequences: 'zip' });\n            setDiff({ type: 'split', hunks: diff.hunks || EMPTY_HUNKS });\n        }\n    }, [oldCode, newCode]);\n\n    useEffect(() => {\n        generateDiff();\n    }, [oldCode, newCode, generateDiff]);\n\n    const [conversations, { initConversation, addComment }] = useConversations();\n    const codeEvents = {\n        onDoubleClick({ change }) {\n            const key = getChangeKey(change);\n            if (!conversations[key]) {\n                initConversation(key);\n            }\n        },\n    };\n\n    const widgets = Object.keys(conversations).map(changeKey => (\n        <Conversation key={changeKey} changeKey={changeKey} comments={conversations[changeKey].comments} onSubmitComment={addComment} />\n    ));\n\n    const serializeContentToHTML = useCallback(() => {\n        fetch('http://localhost:3001/generate-html', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ oldCode, newCode, hunks }),\n        })\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Failed to save HTML content');\n            }\n            return response.json();\n        })\n        .then(data => {\n            console.log('HTML content saved successfully:', data.filePath);\n        })\n        .catch(error => {\n            console.error('Error saving HTML:', error);\n        });\n    }, [oldCode, newCode, hunks]);\n\n    useEffect(() => {\n        if (oldCode && newCode && hunks.length > 0) {\n            serializeContentToHTML();\n        }\n    }, [oldCode, newCode, hunks, serializeContentToHTML]);\n\n    return (\n        <div>\n            <main>\n                <Diff viewType=\"split\" diffType={type} hunks={hunks || EMPTY_HUNKS}>\n                    {hunks =>\n                        hunks.map(hunk => (\n                            <Hunk key={hunk.content} hunk={hunk} codeEvents={codeEvents} widgets={widgets} />\n                        ))\n                    }\n                </Diff>\n            </main>\n        </div>\n    );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}