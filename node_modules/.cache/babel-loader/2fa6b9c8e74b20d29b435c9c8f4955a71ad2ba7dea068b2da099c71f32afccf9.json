{"ast":null,"code":"const serializeContentToHTML = useCallback(() => {\n  const contentElement = document.getElementById('diff-view');\n  if (!contentElement) {\n    return;\n  }\n  const htmlContent = contentElement.innerHTML;\n\n  // Inline styles from CSS files\n  const styles = `\n        body { font-family: Arial, sans-serif; }\n        .diff { display: flex; }\n        .hunk { margin: 10px 0; }\n        .insert { background-color: lightgreen; }\n        .delete { background-color: lightcoral; }\n        /* Include any additional styles from your CSS files */\n    `;\n  const fullHtml = `\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n            <meta charset=\"UTF-8\">\n            <title>Generated Content</title>\n            <style>\n                ${styles}\n            </style>\n            <link rel=\"stylesheet\" href=\"https://unpkg.com/react-diff-view/style/index.css\">\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/4.16.13/antd.min.css\">\n        </head>\n        <body>\n            ${htmlContent}\n        </body>\n        </html>\n    `;\n  fetch('http://localhost:3001/save-html', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      html: fullHtml,\n      filename: 'generated_content.html'\n    }) // Include filename\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Failed to save HTML content');\n    }\n    console.log('HTML content saved successfully');\n    // Handle success or further actions if needed\n  }).catch(error => {\n    console.error('Error saving HTML:', error);\n    // Handle error scenarios\n  });\n}, []);\n\n// This useEffect hook will trigger the HTML serialization when oldCode, newCode, or hunks change.\nuseEffect(() => {\n  if (oldCode && newCode && hunks.length > 0) {\n    serializeContentToHTML();\n  }\n}, [oldCode, newCode, hunks, serializeContentToHTML]);","map":{"version":3,"names":["serializeContentToHTML","useCallback","contentElement","document","getElementById","htmlContent","innerHTML","styles","fullHtml","fetch","method","headers","body","JSON","stringify","html","filename","then","response","ok","Error","console","log","catch","error","useEffect","oldCode","newCode","hunks","length"],"sources":["D:/langchain/my-app/src/index.js"],"sourcesContent":["const serializeContentToHTML = useCallback(() => {\n    const contentElement = document.getElementById('diff-view');\n    if (!contentElement) {\n        return;\n    }\n    const htmlContent = contentElement.innerHTML;\n\n    // Inline styles from CSS files\n    const styles = `\n        body { font-family: Arial, sans-serif; }\n        .diff { display: flex; }\n        .hunk { margin: 10px 0; }\n        .insert { background-color: lightgreen; }\n        .delete { background-color: lightcoral; }\n        /* Include any additional styles from your CSS files */\n    `;\n    const fullHtml = `\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n            <meta charset=\"UTF-8\">\n            <title>Generated Content</title>\n            <style>\n                ${styles}\n            </style>\n            <link rel=\"stylesheet\" href=\"https://unpkg.com/react-diff-view/style/index.css\">\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/4.16.13/antd.min.css\">\n        </head>\n        <body>\n            ${htmlContent}\n        </body>\n        </html>\n    `;\n\n    fetch('http://localhost:3001/save-html', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ html: fullHtml, filename: 'generated_content.html' }), // Include filename\n    })\n    .then(response => {\n        if (!response.ok) {\n            throw new Error('Failed to save HTML content');\n        }\n        console.log('HTML content saved successfully');\n        // Handle success or further actions if needed\n    })\n    .catch(error => {\n        console.error('Error saving HTML:', error);\n        // Handle error scenarios\n    });\n}, []);\n\n// This useEffect hook will trigger the HTML serialization when oldCode, newCode, or hunks change.\nuseEffect(() => {\n    if (oldCode && newCode && hunks.length > 0) {\n        serializeContentToHTML();\n    }\n}, [oldCode, newCode, hunks, serializeContentToHTML]);\n"],"mappings":"AAAA,MAAMA,sBAAsB,GAAGC,WAAW,CAAC,MAAM;EAC7C,MAAMC,cAAc,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;EAC3D,IAAI,CAACF,cAAc,EAAE;IACjB;EACJ;EACA,MAAMG,WAAW,GAAGH,cAAc,CAACI,SAAS;;EAE5C;EACA,MAAMC,MAAM,GAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;EACD,MAAMC,QAAQ,GAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBD,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA,cAAcF,WAAW;AACzB;AACA;AACA,KAAK;EAEDI,KAAK,CAAC,iCAAiC,EAAE;IACrCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,IAAI,EAAEP,QAAQ;MAAEQ,QAAQ,EAAE;IAAyB,CAAC,CAAC,CAAE;EAClF,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAI;IACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACAC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAC9C;EACJ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACZH,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C;EACJ,CAAC,CAAC;AACN,CAAC,EAAE,EAAE,CAAC;;AAEN;AACAC,SAAS,CAAC,MAAM;EACZ,IAAIC,OAAO,IAAIC,OAAO,IAAIC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;IACxC7B,sBAAsB,CAAC,CAAC;EAC5B;AACJ,CAAC,EAAE,CAAC0B,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAE5B,sBAAsB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}